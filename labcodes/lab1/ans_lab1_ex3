1.为何开启A20，以及如何开启A20
	答：在保护模式下，由于使用32位地址线，如果A20恒等于0，那么系统只能访问奇数兆的内存，即只能访问0--1M、2-3M、4-5M......，这显然是不行的，所以在保护模式下，这个开关必须打开。
			开启A20的汇编代码:
				seta20.1:
				    inb $0x64, %al                                  # Wait for not busy(8042 input buffer empty). 从0X64端口读取一个字节放到al寄存器中，按照协议标准是读取Status Register
				    testb $0x2, %al                                #Status Register bit1 表示input register中有数据
				    jnz seta20.1
				
				    movb $0xd1, %al                                 # 0xd1 -> port 0x64
				    outb %al, $0x64                                 # 0xd1 means: write data to 8042's P2 port 向0X64 register中写命令
				
				seta20.2:
				    inb $0x64, %al                                  # Wait for not busy(8042 input buffer empty).
				    testb $0x2, %al
				    jnz seta20.2
				
				    movb $0xdf, %al                                 # 0xdf -> port 0x60
				    outb %al, $0x60                                 # 0xdf = 11011111, means set P2's A20 bit(the 1 bit) to 1     A20Gate is enabled!
			大致分为如下几步：
					1.	等键盘控制器中input buffer清空
					2.	向键盘控制器0X64端口输入0Xd1命令，表示向P2端口写数据
					3.	等待input buffer清空
					4.	向0X60端口写数据，其中代表A20的P2 bit1被置为1


2.如何初始化GDT表
	答：初始化GDT表的汇编代码如下：
  					lgdt gdtdesc									#load  全局描述符寄存器
  					
  					.p2align 2                                          # force 4 byte alignment
  					
					gdt:
					    SEG_NULLASM                                     # null seg
					    SEG_ASM(STA_X|STA_R, 0x0, 0xffffffff)           # code seg for bootloader and kernel
					    SEG_ASM(STA_W, 0x0, 0xffffffff)                 # data seg for bootloader and kernel
					
					gdtdesc:												#GDTR 高32位位全局描述符表的基地址，低16位为段界限 GDTR中的段界限以字节为单位。对于含有N个描述符的描述符表的段界限通常可设为8*N-1
					    .word 0x17                                      # sizeof(gdt) - 1  3个段描述符
					    .long gdt                                       # address gdt
				大致分为如下步骤：
						1. 新建段描述符，其中第一个段描述符位0，接着的两个分别位cs和ds段段描述符
						2. 新建全局段描述符表，其中段界限位23，基地址为描述符的地址gdt
						3.将全局描述符表装载到全局描述符表寄存器
						
					
3.如何使能和进入保护模式
	答：使能保护模式通过CR0寄存器的bit1来控制，将其置位1便使能了保护模式。经过前面的准备工作，将cs段选择子置为cs段在段描述符表中的偏移地址，并使用ljmp跳转，程序运行便进入了保护模式。
